from sklearn.datasets import fetch_openml
from matplotlib import pyplot as plt
import numpy as np
from sklearn.linear_model import LogisticRegression


mnist=fetch_openml('mnist_784')
x,y=mnist['data'],mnist['target']
some_digit=x[36000]

some_digit_image=some_digit.reshape(28,28)
plt.imshow(some_digit_image,cmap='binary',interpolation ='nearest')
plt.axis('off')
X_train,X_test=x[:6000],x[6000:]
y_train,y_test=y[:6000],y[6000:]
shuffle_index=np.random.permutation(6000)
X_train,X_test=X_train[shuffle_index],X_test[shuffle_index]


##creating a detector for the number 2
y_train=y_train.astype(np.int8)
y_test=y_test.astype(np.int8)
y_train_2=(y_train==2)
y_test_2=(y_test==2)

clf=LogisticRegression(tol=0.1)
clf.fit(X_train,y_train_2)
predictions=clf.predict([some_digit])

from sklearn.model_selection import cross_val_score
cross_val_score(clf,x_train,y_train_2,cv=3,scoring='accuracy')
